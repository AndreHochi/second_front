{"ast":null,"code":"var _jsxFileName = \"/home/learn/flatiron/week10/second/second_frontend/src/pages/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signoutAction } from '../actions/signoutAction';\nimport { CardContainer } from '../containers/CardContainer';\nimport { fetchObjectives, fetchLinks, generateTimers } from '../actions/objectiveAction';\nimport store from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Front = props => {\n  _s();\n\n  const cStates = useSelector(reducer => reducer.clockState);\n  const oStates = useSelector(reducer => reducer.objectiveState);\n  const dispatch = useDispatch();\n  let dayToMili = 86400000;\n  let hourToMili = 3600000;\n  let minuteToMili = 60000;\n  let secondToMili = 1000;\n  let remainingtime_s = Math.abs(cStates.time - new Date(2021, 4, 26, 0, 0, 0));\n  let days = Math.floor(remainingtime_s / dayToMili);\n  let remainingtime = remainingtime_s % dayToMili;\n  let hours = Math.floor(remainingtime / hourToMili);\n  remainingtime = remainingtime % hourToMili;\n  let minutes = Math.floor(remainingtime / minuteToMili);\n  remainingtime = remainingtime % minuteToMili;\n  let seconds = Math.floor(remainingtime / secondToMili);\n  useEffect(() => {\n    if (localStorage.token) {\n      fetchObjectives(dispatch);\n      fetchLinks(dispatch);\n      generateTimers(dispatch, store.getState);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-front\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => signoutAction(dispatch, props.history),\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Edit Objectives\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Create Objectives\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: cStates.time.toLocaleDateString(\"en-US\", {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Front, \"BF02bidmjRBGpmHrAsTTtVOMpkk=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Front;\nexport default Front;\n\nvar _c;\n\n$RefreshReg$(_c, \"Front\");","map":{"version":3,"sources":["/home/learn/flatiron/week10/second/second_frontend/src/pages/Main.js"],"names":["React","useEffect","useSelector","useDispatch","signoutAction","CardContainer","fetchObjectives","fetchLinks","generateTimers","store","Front","props","cStates","reducer","clockState","oStates","objectiveState","dispatch","dayToMili","hourToMili","minuteToMili","secondToMili","remainingtime_s","Math","abs","time","Date","days","floor","remainingtime","hours","minutes","seconds","localStorage","token","getState","history","toLocaleDateString","weekday","year","month","day","hour","minute","second"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,eAAT,EAA2BC,UAA3B,EAAwCC,cAAxC,QAA6D,4BAA7D;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAMC,OAAO,GAAGV,WAAW,CAACW,OAAO,IAAIA,OAAO,CAACC,UAApB,CAA3B;AACA,QAAMC,OAAO,GAAGb,WAAW,CAACW,OAAO,IAAIA,OAAO,CAACG,cAApB,CAA3B;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEA,MAAIe,SAAS,GAAG,QAAhB;AACA,MAAIC,UAAU,GAAG,OAAjB;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,YAAY,GAAG,IAAnB;AAEA,MAAIC,eAAe,GAAGC,IAAI,CAACC,GAAL,CAASZ,OAAO,CAACa,IAAR,GAAe,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAxB,CAAtB;AACA,MAAIC,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWN,eAAe,GAAGJ,SAA7B,CAAX;AACA,MAAIW,aAAa,GAAGP,eAAe,GAAGJ,SAAtC;AACA,MAAIY,KAAK,GAAGP,IAAI,CAACK,KAAL,CAAWC,aAAa,GAAGV,UAA3B,CAAZ;AACAU,EAAAA,aAAa,GAAGA,aAAa,GAAGV,UAAhC;AACA,MAAIY,OAAO,GAAGR,IAAI,CAACK,KAAL,CAAWC,aAAa,GAAGT,YAA3B,CAAd;AACAS,EAAAA,aAAa,GAAGA,aAAa,GAAGT,YAAhC;AACA,MAAIY,OAAO,GAAGT,IAAI,CAACK,KAAL,CAAWC,aAAa,GAAGR,YAA3B,CAAd;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgC,YAAY,CAACC,KAAjB,EAAwB;AACpB5B,MAAAA,eAAe,CAACW,QAAD,CAAf;AACAV,MAAAA,UAAU,CAACU,QAAD,CAAV;AACAT,MAAAA,cAAc,CAACS,QAAD,EAAWR,KAAK,CAAC0B,QAAjB,CAAd;AACH;AACJ,GANQ,EAMN,EANM,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEI;AAAQ,MAAA,OAAO,EAAE,MAAM/B,aAAa,CAACa,QAAD,EAAWN,KAAK,CAACyB,OAAjB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,gBAAIxB,OAAO,CAACa,IAAR,CAAaY,kBAAb,CAAgC,OAAhC,EAAyC;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,IAAI,EAAE,SAAzB;AAAoCC,QAAAA,KAAK,EAAE,MAA3C;AAAmDC,QAAAA,GAAG,EAAE,SAAxD;AAAmEC,QAAAA,IAAI,EAAE,SAAzE;AAAoFC,QAAAA,MAAM,EAAE,SAA5F;AAAuGC,QAAAA,MAAM,EAAE;AAA/G,OAAzC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA3CD;;GAAMlC,K;UAEcR,W,EACAA,W,EACCC,W;;;KAJfO,K;AA6CN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { signoutAction } from '../actions/signoutAction'\nimport { CardContainer } from '../containers/CardContainer'\nimport { fetchObjectives , fetchLinks , generateTimers} from '../actions/objectiveAction'\nimport store from '../store'\n\nconst Front = (props) => {\n\n    const cStates = useSelector(reducer => reducer.clockState)\n    const oStates = useSelector(reducer => reducer.objectiveState)\n    const dispatch = useDispatch()\n\n    let dayToMili = 86400000\n    let hourToMili = 3600000\n    let minuteToMili = 60000\n    let secondToMili = 1000\n\n    let remainingtime_s = Math.abs(cStates.time - new Date(2021, 4, 26, 0, 0, 0))\n    let days = Math.floor(remainingtime_s / dayToMili)\n    let remainingtime = remainingtime_s % dayToMili\n    let hours = Math.floor(remainingtime / hourToMili)\n    remainingtime = remainingtime % hourToMili\n    let minutes = Math.floor(remainingtime / minuteToMili)\n    remainingtime = remainingtime % minuteToMili\n    let seconds = Math.floor(remainingtime / secondToMili)\n\n    useEffect(() => {\n        if (localStorage.token) {\n            fetchObjectives(dispatch)\n            fetchLinks(dispatch)\n            generateTimers(dispatch, store.getState)\n        }\n    }, [])\n\n    return (\n        <div className='App-front'>\n            {/* move buttons to a header object  */}\n            <button onClick={() => signoutAction(dispatch, props.history)}>Sign Out</button>\n            <button >Edit Objectives</button>\n            <button >Create Objectives</button>\n            {/* REDO CARD CONTAINER AFTER DOING TIMER OBJECTS */}\n            {/* <CardContainer /> */}\n            <p>{cStates.time.toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' })}</p>\n            {/* <button onClick={}>Edit Objectives</button>\n            <button onClick={}>Create Objectives</button> */}\n\n\n        </div>\n    )\n}\n\nexport default Front"]},"metadata":{},"sourceType":"module"}