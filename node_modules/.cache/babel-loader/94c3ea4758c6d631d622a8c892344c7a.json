{"ast":null,"code":"export const fetchObjectives = (dispatch, store) => {\n  let reqPackage = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n    }\n  };\n  fetch(\"http://localhost:3000/api/v1/getobjectives\", reqPackage).then(res => res.json()).then(data => {\n    dispatch({\n      type: \"GET_OBJECTIVES\",\n      objectives: data.objectives\n    });\n  }).then(() => generateTimers(dispatch, store.getState));\n};\nexport const fetchLinks = dispatch => {\n  let reqPackage = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n    }\n  };\n  fetch(\"http://localhost:3000/api/v1/getlinks\", reqPackage).then(res => res.json()).then(data => {\n    dispatch({\n      type: \"GET_LINKS\",\n      objectives: data.links\n    });\n  });\n};\nexport const createObjAction = (e, dispatch, history, store) => {\n  const state = getState();\n  console.log(e);\n}; // black magic below\n\nexport const generateTimers = (dispatch, getState) => {\n  const state = getState();\n  const objectives = state.objectiveState.objectives;\n  const timers = [];\n  objectives.forEach(objective => {\n    const years = objective.years;\n    const months = objective.months;\n    const days = objective.days;\n    const hours = objective.hours;\n    const minutes = objective.minutes;\n    const seconds = objective.seconds;\n    years.replace(\" \", \"\").split(\",\").forEach(year => {\n      months.replace(\" \", \"\").split(\",\").forEach(month => {\n        days.replace(\" \", \"\").split(\",\").forEach(day => {\n          hours.replace(\" \", \"\").split(\",\").forEach(hour => {\n            minutes.replace(\" \", \"\").split(\",\").forEach(minute => {\n              seconds.replace(\" \", \"\").split(\",\").forEach(second => {\n                timers.push({\n                  name: objective.name,\n                  description: objective.description,\n                  duration: objective.duration,\n                  objective_id: objective.id,\n                  start: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second)),\n                  end: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second + objective.duration))\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n  console.log(timers);\n  dispatch({\n    type: \"GET_TIMERS\",\n    timers: timers\n  });\n}; // black magic above","map":{"version":3,"sources":["/home/learn/flatiron/week10/second/second_frontend/src/actions/objectiveAction.js"],"names":["fetchObjectives","dispatch","store","reqPackage","method","headers","localStorage","getItem","fetch","then","res","json","data","type","objectives","generateTimers","getState","fetchLinks","links","createObjAction","e","history","state","console","log","objectiveState","timers","forEach","objective","years","months","days","hours","minutes","seconds","replace","split","year","month","day","hour","minute","second","push","name","description","duration","objective_id","id","start","Date","parseInt","end"],"mappings":"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","sourcesContent":["export const fetchObjectives = (dispatch, store) => {\n\n    let reqPackage = {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        },\n    };\n\n    fetch(\"http://localhost:3000/api/v1/getobjectives\", reqPackage)\n        .then((res) => res.json())\n        .then((data) => { dispatch({ type: \"GET_OBJECTIVES\", objectives: data.objectives }) })\n        .then(() => generateTimers(dispatch, store.getState))\n}\n\nexport const fetchLinks = (dispatch) => {\n\n    let reqPackage = {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        },\n    };\n\n    fetch(\"http://localhost:3000/api/v1/getlinks\", reqPackage)\n        .then((res) => res.json())\n        .then((data) => { dispatch({ type: \"GET_LINKS\", objectives: data.links }) })\n\n}\n\nexport const createObjAction = (e, dispatch, history, store) => {\n    const state = getState()\n    console.log(e)\n}\n\n// black magic below\nexport const generateTimers = (dispatch, getState) => {\n    const state = getState()\n    const objectives = state.objectiveState.objectives\n    const timers = []\n\n    objectives.forEach(objective => {\n        const years = objective.years\n        const months = objective.months\n        const days = objective.days\n        const hours = objective.hours\n        const minutes = objective.minutes\n        const seconds = objective.seconds\n        years.replace(\" \", \"\").split(\",\").forEach(year => {\n            months.replace(\" \", \"\").split(\",\").forEach(month => {\n                days.replace(\" \", \"\").split(\",\").forEach(day => {\n                    hours.replace(\" \", \"\").split(\",\").forEach(hour => {\n                        minutes.replace(\" \", \"\").split(\",\").forEach(minute => {\n                            seconds.replace(\" \", \"\").split(\",\").forEach(second => {\n                                timers.push({ name: objective.name, description: objective.description, duration: objective.duration, objective_id: objective.id, start: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second)), end: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second + objective.duration)) })\n                            })\n                        })\n                    })\n                })\n            })\n        })\n    })\n\n    console.log(timers)\n\n    dispatch({ type: \"GET_TIMERS\", timers: timers })\n}\n// black magic above"]},"metadata":{},"sourceType":"module"}