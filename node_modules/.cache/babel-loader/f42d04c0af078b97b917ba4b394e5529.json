{"ast":null,"code":"var _jsxFileName = \"/home/learn/flatiron/week10/every_second/every_second_frontend/src/pages/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchObjectives } from '../actions/objectiveAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Front = () => {\n  _s();\n\n  const states = useSelector(reducer => reducer.clockState);\n  const dispatch = useDispatch();\n  let dayToMili = 86400000;\n  let hourToMili = 3600000;\n  let minuteToMili = 60000;\n  let secondToMili = 1000;\n  let remainingtime_s = Math.abs(states.time - new Date(2021, 4, 26, 0, 0, 0));\n  let days = Math.floor(remainingtime_s / dayToMili);\n  let remainingtime = remainingtime_s % dayToMili;\n  let hours = Math.floor(remainingtime / hourToMili);\n  remainingtime = remainingtime % hourToMili;\n  let minutes = Math.floor(remainingtime / minuteToMili);\n  remainingtime = remainingtime % minuteToMili;\n  let seconds = Math.floor(remainingtime / secondToMili);\n  useEffect(() => {\n    fetchObjectives(dispatch);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-front\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [days, \" : \", hours, \" : \", minutes, \" : \", seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: states.time.toLocaleDateString(\"en-US\", {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Front, \"qE6Afy2MPoMysXFkEXj85c6jKB0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Front;\nexport default Front;\n\nvar _c;\n\n$RefreshReg$(_c, \"Front\");","map":{"version":3,"sources":["/home/learn/flatiron/week10/every_second/every_second_frontend/src/pages/Main.js"],"names":["React","useEffect","useSelector","useDispatch","fetchObjectives","Front","states","reducer","clockState","dispatch","dayToMili","hourToMili","minuteToMili","secondToMili","remainingtime_s","Math","abs","time","Date","days","floor","remainingtime","hours","minutes","seconds","toLocaleDateString","weekday","year","month","day","hour","minute","second"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,4BAAhC;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAMC,MAAM,GAAGJ,WAAW,CAACK,OAAO,IAAIA,OAAO,CAACC,UAApB,CAA1B;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,MAAIO,SAAS,GAAG,QAAhB;AACA,MAAIC,UAAU,GAAG,OAAjB;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,YAAY,GAAG,IAAnB;AAEA,MAAIC,eAAe,GAAGC,IAAI,CAACC,GAAL,CAASV,MAAM,CAACW,IAAP,GAAc,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAvB,CAAtB;AACA,MAAIC,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWN,eAAe,GAAGJ,SAA7B,CAAX;AACA,MAAIW,aAAa,GAAGP,eAAe,GAAGJ,SAAtC;AACA,MAAIY,KAAK,GAAGP,IAAI,CAACK,KAAL,CAAWC,aAAa,GAAGV,UAA3B,CAAZ;AACAU,EAAAA,aAAa,GAAGA,aAAa,GAAGV,UAAhC;AACA,MAAIY,OAAO,GAAGR,IAAI,CAACK,KAAL,CAAWC,aAAa,GAAGT,YAA3B,CAAd;AACAS,EAAAA,aAAa,GAAGA,aAAa,GAAGT,YAAhC;AACA,MAAIY,OAAO,GAAGT,IAAI,CAACK,KAAL,CAAWC,aAAa,GAAGR,YAA3B,CAAd;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,eAAe,CAACK,QAAD,CAAf;AACH,GAFQ,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEI;AAAA,iBAAIU,IAAJ,SAAaG,KAAb,SAAuBC,OAAvB,SAAmCC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAA,gBAAIlB,MAAM,CAACW,IAAP,CAAYQ,kBAAZ,CAA+B,OAA/B,EAAwC;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,IAAI,EAAE,SAAzB;AAAoCC,QAAAA,KAAK,EAAE,MAA3C;AAAmDC,QAAAA,GAAG,EAAE,SAAxD;AAAmEC,QAAAA,IAAI,EAAE,SAAzE;AAAoFC,QAAAA,MAAM,EAAE,SAA5F;AAAuGC,QAAAA,MAAM,EAAE;AAA/G,OAAxC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAhCD;;GAAM3B,K;UAEaH,W,EACEC,W;;;KAHfE,K;AAkCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchObjectives } from '../actions/objectiveAction'\n\n\nconst Front = () => {\n\n    const states = useSelector(reducer => reducer.clockState)\n    const dispatch = useDispatch()\n\n    let dayToMili = 86400000\n    let hourToMili = 3600000\n    let minuteToMili = 60000\n    let secondToMili = 1000\n\n    let remainingtime_s = Math.abs(states.time - new Date(2021, 4, 26, 0, 0, 0))\n    let days = Math.floor(remainingtime_s / dayToMili)\n    let remainingtime = remainingtime_s % dayToMili\n    let hours = Math.floor(remainingtime / hourToMili)\n    remainingtime = remainingtime % hourToMili\n    let minutes = Math.floor(remainingtime / minuteToMili)\n    remainingtime = remainingtime % minuteToMili\n    let seconds = Math.floor(remainingtime / secondToMili)\n\n\n    useEffect(() => {\n        fetchObjectives(dispatch)\n    })\n\n    return (\n        <div className='App-front'>\n            {/* <p>{new Date(states.time - new Date(2021, 5, 25, 2, 0, 0)).toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'})}</p> */}\n            <p>{days} : {hours} : {minutes} : {seconds}</p>\n\n            <p>{states.time.toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' })}</p>\n        </div>\n    )\n}\n\nexport default Front"]},"metadata":{},"sourceType":"module"}