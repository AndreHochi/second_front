{"ast":null,"code":"var _jsxFileName = \"/home/learn/flatiron/week10/second/second_frontend/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = props => {\n  _s();\n\n  const states = useSelector(reducer => reducer.clockState); // console.log(props.timer)\n\n  let remainingtime_s = new Date(props.timer.end - states.time);\n  let days = Math.abs(Math.floor(remainingtime_s / 86400000)); // let remainingtime = remainingtime_s % dayToMili\n  // let hours = Math.floor(remainingtime / hourToMili)\n  // remainingtime = remainingtime % hourToMili\n  // let minutes = Math.floor(remainingtime / minuteToMili)\n  // remainingtime = remainingtime % minuteToMili\n  // let seconds = Math.floor(remainingtime / secondToMili)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [`${days}`, \" : \", `${remainingtime_s.getHours()}`.padStart(2, '0'), \" : \", `${remainingtime_s.getMinutes()}`.padStart(2, '0'), \" : \", `${remainingtime_s.getSeconds()}`.padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.timer.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.timer.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Card, \"4IiFm7qY1UPiNeobO12xv2NMmFc=\", false, function () {\n  return [useSelector];\n});\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/learn/flatiron/week10/second/second_frontend/src/components/Card.js"],"names":["React","useSelector","useDispatch","useHistory","Card","props","states","reducer","clockState","remainingtime_s","Date","timer","end","time","days","Math","abs","floor","getHours","padStart","getMinutes","getSeconds","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAMC,MAAM,GAAGL,WAAW,CAACM,OAAO,IAAIA,OAAO,CAACC,UAApB,CAA1B,CAF2B,CAK3B;;AAEA,MAAIC,eAAe,GAAG,IAAIC,IAAJ,CAASL,KAAK,CAACM,KAAN,CAAYC,GAAZ,GAAkBN,MAAM,CAACO,IAAlC,CAAtB;AACA,MAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWR,eAAe,GAAG,QAA7B,CAAT,CAAX,CAR2B,CAS3B;AACA;AACA;AACA;AACA;AACA;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAKK;AAAA,iBAAK,GAAEK,IAAK,EAAZ,SAAmB,GAAEL,eAAe,CAACS,QAAhB,EAA2B,EAA9B,CAAgCC,QAAhC,CAAyC,CAAzC,EAA4C,GAA5C,CAAlB,SAAwE,GAAEV,eAAe,CAACW,UAAhB,EAA6B,EAAhC,CAAkCD,QAAlC,CAA2C,CAA3C,EAA8C,GAA9C,CAAvE,SAA+H,GAAEV,eAAe,CAACY,UAAhB,EAA6B,EAAhC,CAAkCF,QAAlC,CAA2C,CAA3C,EAA8C,GAA9C,CAA9H;AAAA;AAAA;AAAA;AAAA;AAAA,YALL,eAMK;AAAA,gBAAId,KAAK,CAACM,KAAN,CAAYW;AAAhB;AAAA;AAAA;AAAA;AAAA,YANL,eAOK;AAAA,gBAAIjB,KAAK,CAACM,KAAN,CAAYY;AAAhB;AAAA;AAAA;AAAA;AAAA,YAPL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhCM;;GAAMnB,I;UAEMH,W;;;KAFNG,I","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\n\nexport const Card = (props) => {\n\n    const states = useSelector(reducer => reducer.clockState)\n\n\n    // console.log(props.timer)\n\n    let remainingtime_s = new Date(props.timer.end - states.time)\n    let days = Math.abs(Math.floor(remainingtime_s / 86400000))\n    // let remainingtime = remainingtime_s % dayToMili\n    // let hours = Math.floor(remainingtime / hourToMili)\n    // remainingtime = remainingtime % hourToMili\n    // let minutes = Math.floor(remainingtime / minuteToMili)\n    // remainingtime = remainingtime % minuteToMili\n    // let seconds = Math.floor(remainingtime / secondToMili)\n\n\n\n    return (\n        <div className='card'>\n            {/* {86400000 > remainingtime_s > 0 ? <p>{`${hours}`.padStart(2, '0')} : {`${minutes}`.padStart(2, '0')} : {`${seconds}`.padStart(2, '0')}</p> : <h1></h1>} */}\n\n            {/* {remainingtime_s.valueOf() < 0 && remainingtime_s.valueOf() > -1000 ? dispatch({type: \"START_SOUND\"}) : null}\n            {remainingtime_s.valueOf() < -1000 ? dispatch({type: \"STOP_SOUND\"}) : null} */}\n            {<p>{`${days}`} : {`${remainingtime_s.getHours()}`.padStart(2, '0')} : {`${remainingtime_s.getMinutes()}`.padStart(2, '0')} : {`${remainingtime_s.getSeconds()}`.padStart(2, '0')}</p>}\n            {<p>{props.timer.name}</p>}\n            {<p>{props.timer.description}</p>}\n            {/* <p>{`${days}`} : {`${hours}`.padStart(2, '0')} : {`${minutes}`.padStart(2, '0')} : {`${seconds}`.padStart(2, '0')}</p>\n            <p>{props.objective.name}</p>\n            <p>{props.objective.description}</p> */}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}