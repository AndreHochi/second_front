{"ast":null,"code":"var _jsxFileName = \"/home/learn/flatiron/week10/second/second_frontend/src/containers/CardContainer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card } from '../components/Card';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CardContainer = () => {\n  _s();\n\n  let remainingtime_s = new Date(props.objective.years, props.objective.months - 1, props.objective.days, props.objective.hours, props.objective.minutes, props.objective.seconds + props.objective.duration) - states.time;\n  const states = useSelector(reducer => reducer.objectiveState);\n  const clock = useSelector(reducer => reducer.clockState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: Object.keys(states.objectives).length === 0 ? null : states.timers.select(timer => 86400000 > new Date(timer.years, timer.months - 1, timer.days, timer.hours, timer.minutes, timer.seconds + timer.duration) - clock.time && new Date(timer.years, timer.months - 1, timer.days, timer.hours, timer.minutes, timer.seconds + timer.duration) - clock.time > 0).map(timer => /*#__PURE__*/_jsxDEV(Card, {\n      timer: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 379\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardContainer, \"uCF1egKnmwDu9OkWXoR8AV5/SXk=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = CardContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"sources":["/home/learn/flatiron/week10/second/second_frontend/src/containers/CardContainer.js"],"names":["React","Card","useSelector","CardContainer","remainingtime_s","Date","props","objective","years","months","days","hours","minutes","seconds","duration","states","time","reducer","objectiveState","clock","clockState","Object","keys","objectives","length","timers","select","timer","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B,MAAIC,eAAe,GAAG,IAAIC,IAAJ,CAASC,KAAK,CAACC,SAAN,CAAgBC,KAAzB,EAAgCF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,GAAyB,CAAzD,EAA4DH,KAAK,CAACC,SAAN,CAAgBG,IAA5E,EAAkFJ,KAAK,CAACC,SAAN,CAAgBI,KAAlG,EAAyGL,KAAK,CAACC,SAAN,CAAgBK,OAAzH,EAAkIN,KAAK,CAACC,SAAN,CAAgBM,OAAhB,GAA0BP,KAAK,CAACC,SAAN,CAAgBO,QAA5K,IAAwLC,MAAM,CAACC,IAArN;AACA,QAAMD,MAAM,GAAGb,WAAW,CAACe,OAAO,IAAIA,OAAO,CAACC,cAApB,CAA1B;AACA,QAAMC,KAAK,GAAGjB,WAAW,CAACe,OAAO,IAAIA,OAAO,CAACG,UAApB,CAAzB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKC,MAAM,CAACC,IAAP,CAAYP,MAAM,CAACQ,UAAnB,EAA+BC,MAA/B,KAA0C,CAA1C,GAA8C,IAA9C,GAAqDT,MAAM,CAACU,MAAP,CAAcC,MAAd,CAAqBC,KAAK,IAAI,WAAW,IAAItB,IAAJ,CAASsB,KAAK,CAACnB,KAAf,EAAsBmB,KAAK,CAAClB,MAAN,GAAe,CAArC,EAAwCkB,KAAK,CAACjB,IAA9C,EAAoDiB,KAAK,CAAChB,KAA1D,EAAiEgB,KAAK,CAACf,OAAvE,EAAgFe,KAAK,CAACd,OAAN,GAAgBc,KAAK,CAACb,QAAtG,IAAkHK,KAAK,CAACH,IAAnI,IAA2I,IAAIX,IAAJ,CAASsB,KAAK,CAACnB,KAAf,EAAsBmB,KAAK,CAAClB,MAAN,GAAe,CAArC,EAAwCkB,KAAK,CAACjB,IAA9C,EAAoDiB,KAAK,CAAChB,KAA1D,EAAiEgB,KAAK,CAACf,OAAvE,EAAgFe,KAAK,CAACd,OAAN,GAAgBc,KAAK,CAACb,QAAtG,IAAkHK,KAAK,CAACH,IAAxH,GAA+H,CAAxS,EAA2SY,GAA3S,CAA+SD,KAAK,iBAAI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,YAAxT;AAD1D;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAVM;;GAAMxB,a;UAEMD,W,EACDA,W;;;KAHLC,a","sourcesContent":["import React from 'react';\nimport { Card } from '../components/Card'\nimport { useSelector } from 'react-redux'\n\n\nexport const CardContainer = () => {\n    let remainingtime_s = new Date(props.objective.years, props.objective.months - 1, props.objective.days, props.objective.hours, props.objective.minutes, props.objective.seconds + props.objective.duration) - states.time\n    const states = useSelector(reducer => reducer.objectiveState)\n    const clock = useSelector(reducer => reducer.clockState)\n\n    return (\n        <div className=\"container\">\n            {Object.keys(states.objectives).length === 0 ? null : states.timers.select(timer => 86400000 > new Date(timer.years, timer.months - 1, timer.days, timer.hours, timer.minutes, timer.seconds + timer.duration) - clock.time && new Date(timer.years, timer.months - 1, timer.days, timer.hours, timer.minutes, timer.seconds + timer.duration) - clock.time > 0).map(timer => <Card timer={timer} />)}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}