{"ast":null,"code":"export const fetchLogin = (toggle, e, dispatch, history) => {\n  if (toggle === false) {\n    let user = {\n      name: e.target[0].value,\n      password: e.target[1].value\n    };\n    let reqPackage = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(user)\n    };\n    fetch(\"http://localhost:3000/api/v1/login\", reqPackage).then(res => res.json()).then(data => {\n      data.token === \"Incorrect name or password\" ? dispatch({\n        type: 'FOOL'\n      }) : dispatch({\n        type: 'GET_LOGIN',\n        username: data.name\n      });\n      localStorage.setItem(\"token\", data.token);\n    }).then(() => localStorage.token === \"Incorrect name or password\" ? history.push(\"/\") : history.push(\"/main\"));\n  }\n\n  if (toggle === true) {\n    let user = {\n      name: e.target[0].value,\n      password: e.target[1].value\n    };\n    let reqPackage = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(user)\n    };\n    fetch(\"http://localhost:3000/api/v1/signup\", reqPackage).then(res => res.json()).then(data => {\n      data.token === \"Incorrect name or password\" ? dispatch({\n        type: 'FOOL'\n      }) : dispatch({\n        type: 'SIGNUP'\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/home/learn/flatiron/week10/every_second/every_second_frontend/src/actions/loginAction.js"],"names":["fetchLogin","toggle","e","dispatch","history","user","name","target","value","password","reqPackage","method","headers","localStorage","getItem","body","JSON","stringify","fetch","then","res","json","data","token","type","username","setItem","push","Accept"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,CAACC,MAAD,EAASC,CAAT,EAAYC,QAAZ,EAAsBC,OAAtB,KAAkC;AAExD,MAAIH,MAAM,KAAK,KAAf,EAAsB;AAElB,QAAII,IAAI,GAAG;AACPC,MAAAA,IAAI,EAAEJ,CAAC,CAACK,MAAF,CAAS,CAAT,EAAYC,KADX;AAEPC,MAAAA,QAAQ,EAAEP,CAAC,CAACK,MAAF,CAAS,CAAT,EAAYC;AAFf,KAAX;AAKA,QAAIE,UAAU,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU,kBAFL;AAGL,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAHpD,OAFI;AAObC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAPO,KAAjB;AAUAa,IAAAA,KAAK,CAAC,oCAAD,EAAuCR,UAAvC,CAAL,CACKS,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZA,MAAAA,IAAI,CAACC,KAAL,KAAe,4BAAf,GAA8CpB,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAtD,GAA2ErB,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,QAAQ,EAAEH,IAAI,CAAChB;AAApC,OAAD,CAAnF;AACAO,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACC,KAAnC;AACH,KALL,EAMKJ,IANL,CAMU,MAAMN,YAAY,CAACU,KAAb,KAAuB,4BAAvB,GAAsDnB,OAAO,CAACuB,IAAR,CAAa,GAAb,CAAtD,GAA0EvB,OAAO,CAACuB,IAAR,CAAa,OAAb,CAN1F;AAQH;;AAED,MAAI1B,MAAM,KAAK,IAAf,EAAqB;AAEjB,QAAII,IAAI,GAAG;AACPC,MAAAA,IAAI,EAAEJ,CAAC,CAACK,MAAF,CAAS,CAAT,EAAYC,KADX;AAEPC,MAAAA,QAAQ,EAAEP,CAAC,CAACK,MAAF,CAAS,CAAT,EAAYC;AAFf,KAAX;AAKA,QAAIE,UAAU,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELgB,QAAAA,MAAM,EAAE;AAFH,OAFI;AAMbb,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AANO,KAAjB;AASAa,IAAAA,KAAK,CAAC,qCAAD,EAAwCR,UAAxC,CAAL,CACKS,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZA,MAAAA,IAAI,CAACC,KAAL,KAAe,4BAAf,GAA8CpB,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAtD,GAA2ErB,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAnF;AACH,KAJL;AAMH;AACJ,CApDM","sourcesContent":["export const fetchLogin = (toggle, e, dispatch, history) => {\n\n    if (toggle === false) {\n\n        let user = {\n            name: e.target[0].value,\n            password: e.target[1].value,\n        };\n\n        let reqPackage = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(user),\n        };\n\n        fetch(\"http://localhost:3000/api/v1/login\", reqPackage)\n            .then((res) => res.json())\n            .then((data) => {\n                data.token === \"Incorrect name or password\" ? dispatch({ type: 'FOOL' }) : dispatch({ type: 'GET_LOGIN', username: data.name })\n                localStorage.setItem(\"token\", data.token)\n            })\n            .then(() => localStorage.token === \"Incorrect name or password\" ? history.push(\"/\") : history.push(\"/main\"))\n\n    }\n\n    if (toggle === true) {\n\n        let user = {\n            name: e.target[0].value,\n            password: e.target[1].value,\n        };\n\n        let reqPackage = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n            body: JSON.stringify(user),\n        };\n\n        fetch(\"http://localhost:3000/api/v1/signup\", reqPackage)\n            .then((res) => res.json())\n            .then((data) => {\n                data.token === \"Incorrect name or password\" ? dispatch({ type: 'FOOL' }) : dispatch({ type: 'SIGNUP' })\n            })\n\n    }\n}"]},"metadata":{},"sourceType":"module"}