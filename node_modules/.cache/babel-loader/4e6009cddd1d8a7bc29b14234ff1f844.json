{"ast":null,"code":"var _jsxFileName = \"/home/learn/flatiron/week10/every_second/every_second_frontend/src/pages/Main.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Front = () => {\n  _s();\n\n  const states = useSelector(reducer => reducer.clockState);\n  let dayToMili = 86400000;\n  let hourToMili = 3600000;\n  let minuteToMili = 60000;\n  let secondToMili = 1000;\n  let remainingtime = states.time - new Date(2021, 5, 25, 2, 0, 0);\n  let days = Math.floor(remainingtime / dayToMili);\n  remainingtime = remainingtime % dayToMili;\n  let hours = Math.floor(remainingtime / hourToMili);\n  remainingtime = remainingtime % hourToMili;\n  let minutes = Math.floor(remainingtime / minuteToMili);\n  remainingtime = remainingtime % minuteToMili;\n  let seconds = Math.floor(remainingtime / secondToMili);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-front\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [days, \" : \", hours, \" : \", minutes, \" : \", seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: states.time.toLocaleDateString(\"en-US\", {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Front, \"4IiFm7qY1UPiNeobO12xv2NMmFc=\", false, function () {\n  return [useSelector];\n});\n\n_c = Front;\nexport default Front;\n\nvar _c;\n\n$RefreshReg$(_c, \"Front\");","map":{"version":3,"sources":["/home/learn/flatiron/week10/every_second/every_second_frontend/src/pages/Main.js"],"names":["useSelector","Front","states","reducer","clockState","dayToMili","hourToMili","minuteToMili","secondToMili","remainingtime","time","Date","days","Math","floor","hours","minutes","seconds","toLocaleDateString","weekday","year","month","day","hour","minute","second"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAMC,MAAM,GAAGF,WAAW,CAACG,OAAO,IAAIA,OAAO,CAACC,UAApB,CAA1B;AAEA,MAAIC,SAAS,GAAG,QAAhB;AACA,MAAIC,UAAU,GAAG,OAAjB;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,YAAY,GAAG,IAAnB;AAEA,MAAIC,aAAa,GAAGP,MAAM,CAACQ,IAAP,GAAc,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAlC;AACA,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,aAAa,GAACJ,SAAzB,CAAX;AACAI,EAAAA,aAAa,GAAGA,aAAa,GAACJ,SAA9B;AACA,MAAIU,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAWL,aAAa,GAACH,UAAzB,CAAZ;AACAG,EAAAA,aAAa,GAAGA,aAAa,GAACH,UAA9B;AACA,MAAIU,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWL,aAAa,GAACF,YAAzB,CAAd;AACAE,EAAAA,aAAa,GAAGA,aAAa,GAACF,YAA9B;AACA,MAAIU,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAWL,aAAa,GAACD,YAAzB,CAAd;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEI;AAAA,iBAAII,IAAJ,SAAaG,KAAb,SAAuBC,OAAvB,SAAmCC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAA,gBAAIf,MAAM,CAACQ,IAAP,CAAYQ,kBAAZ,CAA+B,OAA/B,EAAwC;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,IAAI,EAAE,SAAzB;AAAoCC,QAAAA,KAAK,EAAE,MAA3C;AAAmDC,QAAAA,GAAG,EAAE,SAAxD;AAAmEC,QAAAA,IAAI,EAAE,SAAzE;AAAoFC,QAAAA,MAAM,EAAE,SAA5F;AAAuGC,QAAAA,MAAM,EAAE;AAA/G,OAAxC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA3BD;;GAAMxB,K;UAEaD,W;;;KAFbC,K;AA6BN,eAAeA,KAAf","sourcesContent":["import { useSelector } from 'react-redux'\n\n\nconst Front = () => {\n\n    const states = useSelector(reducer => reducer.clockState)\n\n    let dayToMili = 86400000\n    let hourToMili = 3600000\n    let minuteToMili = 60000\n    let secondToMili = 1000\n\n    let remainingtime = states.time - new Date(2021, 5, 25, 2, 0, 0)\n    let days = Math.floor(remainingtime/dayToMili)\n    remainingtime = remainingtime%dayToMili\n    let hours = Math.floor(remainingtime/hourToMili)\n    remainingtime = remainingtime%hourToMili\n    let minutes = Math.floor(remainingtime/minuteToMili)\n    remainingtime = remainingtime%minuteToMili\n    let seconds = Math.floor(remainingtime/secondToMili)\n\n\n    return (\n        <div className='App-front'>\n            {/* <p>{new Date(states.time - new Date(2021, 5, 25, 2, 0, 0)).toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'})}</p> */}\n            <p>{days} : {hours} : {minutes} : {seconds}</p>\n\n            <p>{states.time.toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'})}</p>\n        </div>\n    )\n}\n\nexport default Front"]},"metadata":{},"sourceType":"module"}