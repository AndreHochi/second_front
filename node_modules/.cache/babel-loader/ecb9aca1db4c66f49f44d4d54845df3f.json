{"ast":null,"code":"export const fetchObjectives = (dispatch, store) => {\n  let reqPackage = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n    }\n  };\n  fetch(\"http://localhost:3000/api/v1/getobjectives\", reqPackage).then(res => res.json()).then(data => {\n    dispatch({\n      type: \"GET_OBJECTIVES\",\n      objectives: data.objectives\n    });\n  }).then(() => generateTimers(dispatch, store.getState));\n};\nexport const deleteObjAction = (e, dispatch, history, store) => {\n  e.preventDefault();\n  console.log(e);\n  const state = store.getState().objectiveState.currentObj;\n  let reqPackage = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n    },\n    body: JSON.stringify(state.id)\n  }; //fetch(\"http://localhost:3000/api/v1/deleteObj\", reqPackage)\n  //.then(() => dispatch({ type: \"DELETEOBJ\", objective: state }) )\n};\nexport const fetchLinks = dispatch => {\n  let reqPackage = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n    }\n  };\n  fetch(\"http://localhost:3000/api/v1/getlinks\", reqPackage).then(res => res.json()).then(data => {\n    dispatch({\n      type: \"GET_LINKS\",\n      links: data.links\n    });\n  });\n};\nexport const createObjAction = (e, dispatch, history, store) => {\n  e.preventDefault();\n  const state = store.getState(); //for None first\n\n  if (e.target[0].value === \"\") {\n    let newObj = {\n      name: e.target[1].value,\n      description: e.target[2].value,\n      duration: e.target[3].value,\n      years: e.target[4].value,\n      months: e.target[5].value,\n      days: e.target[6].value,\n      hours: e.target[7].value,\n      minutes: e.target[8].value,\n      seconds: e.target[9].value\n    };\n    let reqPackage = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(newObj)\n    };\n    fetch(\"http://localhost:3000/api/v1/newObjNoLink\", reqPackage).then(res => res.json()).then(data => {\n      dispatch({\n        type: \"NEWOBJS\",\n        objective: data.objective\n      });\n    }).then(() => history.push(\"/main\"));\n  } else {\n    let linkedObjective = state.objectiveState.objectives.find(objective => objective.id == e.target[0].value);\n    let newSeconds = linkedObjective.seconds.replace(\" \", \"\").split(\",\").map(second => String(parseInt(second) + parseInt(linkedObjective.duration) + parseInt(e.target[4].value))).reduce((accumulator, currentValue) => accumulator + \",\" + currentValue);\n    let newObj = {\n      linkedObjectiveid: e.target[0].value,\n      name: e.target[1].value,\n      description: e.target[2].value,\n      duration: e.target[3].value,\n      delay: e.target[4].value,\n      years: linkedObjective.years,\n      months: linkedObjective.months,\n      days: linkedObjective.days,\n      hours: linkedObjective.hours,\n      minutes: linkedObjective.minutes,\n      seconds: newSeconds\n    };\n    let reqPackage = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(newObj)\n    };\n    fetch(\"http://localhost:3000/api/v1/newObjLink\", reqPackage).then(res => res.json()).then(data => {\n      dispatch({\n        type: \"NEWOBJS\",\n        objective: data.objective\n      });\n      dispatch({\n        type: \"NEWLINKS\",\n        link: data.link\n      });\n    }) //stolen from the black magic below\n    .then(() => {\n      const objectives = state.objectiveState.objectives;\n      const timers = [];\n      objectives.forEach(objective => {\n        const years = objective.years;\n        const months = objective.months;\n        const days = objective.days;\n        const hours = objective.hours;\n        const minutes = objective.minutes;\n        const seconds = objective.seconds;\n        years.replace(\" \", \"\").split(\",\").forEach(year => {\n          months.replace(\" \", \"\").split(\",\").forEach(month => {\n            days.replace(\" \", \"\").split(\",\").forEach(day => {\n              hours.replace(\" \", \"\").split(\",\").forEach(hour => {\n                minutes.replace(\" \", \"\").split(\",\").forEach(minute => {\n                  seconds.replace(\" \", \"\").split(\",\").forEach(second => {\n                    timers.push({\n                      name: objective.name,\n                      description: objective.description,\n                      duration: objective.duration,\n                      objective_id: objective.id,\n                      start: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second)),\n                      end: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second + objective.duration))\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n      dispatch({\n        type: \"GET_TIMERS\",\n        timers: timers\n      });\n    });\n  }\n\n  ;\n}; // black magic below\n\nexport const generateTimers = (dispatch, getState) => {\n  const state = getState();\n  const objectives = state.objectiveState.objectives;\n  const timers = [];\n  objectives.forEach(objective => {\n    const years = objective.years;\n    const months = objective.months;\n    const days = objective.days;\n    const hours = objective.hours;\n    const minutes = objective.minutes;\n    const seconds = objective.seconds;\n    years.replace(\" \", \"\").split(\",\").forEach(year => {\n      months.replace(\" \", \"\").split(\",\").forEach(month => {\n        days.replace(\" \", \"\").split(\",\").forEach(day => {\n          hours.replace(\" \", \"\").split(\",\").forEach(hour => {\n            minutes.replace(\" \", \"\").split(\",\").forEach(minute => {\n              seconds.replace(\" \", \"\").split(\",\").forEach(second => {\n                timers.push({\n                  name: objective.name,\n                  description: objective.description,\n                  duration: objective.duration,\n                  objective_id: objective.id,\n                  start: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second)),\n                  end: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second + objective.duration))\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n  console.log(timers);\n  dispatch({\n    type: \"GET_TIMERS\",\n    timers: timers\n  });\n}; // black magic above","map":{"version":3,"sources":["/home/learn/flatiron/week10/second/second_frontend/src/actions/objectiveAction.js"],"names":["fetchObjectives","dispatch","store","reqPackage","method","headers","localStorage","getItem","fetch","then","res","json","data","type","objectives","generateTimers","getState","deleteObjAction","e","history","preventDefault","console","log","state","objectiveState","currentObj","body","JSON","stringify","id","fetchLinks","links","createObjAction","target","value","newObj","name","description","duration","years","months","days","hours","minutes","seconds","objective","push","linkedObjective","find","newSeconds","replace","split","map","second","String","parseInt","reduce","accumulator","currentValue","linkedObjectiveid","delay","link","timers","forEach","year","month","day","hour","minute","objective_id","start","Date","end"],"mappings":"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","sourcesContent":["export const fetchObjectives = (dispatch, store) => {\n\n    let reqPackage = {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        },\n    };\n\n    fetch(\"http://localhost:3000/api/v1/getobjectives\", reqPackage)\n        .then((res) => res.json())\n        .then((data) => { dispatch({ type: \"GET_OBJECTIVES\", objectives: data.objectives }) })\n        .then(() => generateTimers(dispatch, store.getState))\n}\n\nexport const deleteObjAction = (e, dispatch, history, store) => {\n    e.preventDefault()\n    console.log(e)\n    const state = store.getState().objectiveState.currentObj\n\n    let reqPackage = {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(state.id)\n    };\n\n    //fetch(\"http://localhost:3000/api/v1/deleteObj\", reqPackage)\n    //.then(() => dispatch({ type: \"DELETEOBJ\", objective: state }) )\n\n\n}\n\nexport const fetchLinks = (dispatch) => {\n\n    let reqPackage = {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        },\n    };\n\n    fetch(\"http://localhost:3000/api/v1/getlinks\", reqPackage)\n        .then((res) => res.json())\n        .then((data) => { dispatch({ type: \"GET_LINKS\", links: data.links }) })\n\n}\n\nexport const createObjAction = (e, dispatch, history, store) => {\n    e.preventDefault()\n    const state = store.getState()\n\n    //for None first\n    if (e.target[0].value === \"\") {\n\n        let newObj = {\n            name: e.target[1].value,\n            description: e.target[2].value,\n            duration: e.target[3].value,\n            years: e.target[4].value,\n            months: e.target[5].value,\n            days: e.target[6].value,\n            hours: e.target[7].value,\n            minutes: e.target[8].value,\n            seconds: e.target[9].value\n        }\n\n        let reqPackage = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(newObj)\n        }\n\n        fetch(\"http://localhost:3000/api/v1/newObjNoLink\", reqPackage)\n            .then((res) => res.json())\n            .then((data) => { dispatch({ type: \"NEWOBJS\", objective: data.objective }) })\n            .then(() => history.push(\"/main\"))\n\n    } else {\n\n        let linkedObjective = state.objectiveState.objectives.find(objective => objective.id == e.target[0].value)\n\n        let newSeconds = linkedObjective.seconds.replace(\" \", \"\").split(\",\").map(second => String(parseInt(second) + parseInt(linkedObjective.duration) + parseInt(e.target[4].value))).reduce((accumulator, currentValue) => accumulator + \",\" + currentValue)\n\n        let newObj = {\n            linkedObjectiveid: e.target[0].value,\n            name: e.target[1].value,\n            description: e.target[2].value,\n            duration: e.target[3].value,\n            delay: e.target[4].value,\n            years: linkedObjective.years,\n            months: linkedObjective.months,\n            days: linkedObjective.days,\n            hours: linkedObjective.hours,\n            minutes: linkedObjective.minutes,\n            seconds: newSeconds\n        }\n\n        let reqPackage = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(newObj)\n        }\n\n        fetch(\"http://localhost:3000/api/v1/newObjLink\", reqPackage)\n            .then((res) => res.json())\n            .then((data) => { dispatch({ type: \"NEWOBJS\", objective: data.objective }); dispatch({ type: \"NEWLINKS\", link: data.link }) })\n            //stolen from the black magic below\n            .then(() => {\n                const objectives = state.objectiveState.objectives\n                const timers = []\n\n                objectives.forEach(objective => {\n                    const years = objective.years\n                    const months = objective.months\n                    const days = objective.days\n                    const hours = objective.hours\n                    const minutes = objective.minutes\n                    const seconds = objective.seconds\n                    years.replace(\" \", \"\").split(\",\").forEach(year => {\n                        months.replace(\" \", \"\").split(\",\").forEach(month => {\n                            days.replace(\" \", \"\").split(\",\").forEach(day => {\n                                hours.replace(\" \", \"\").split(\",\").forEach(hour => {\n                                    minutes.replace(\" \", \"\").split(\",\").forEach(minute => {\n                                        seconds.replace(\" \", \"\").split(\",\").forEach(second => {\n                                            timers.push({ name: objective.name, description: objective.description, duration: objective.duration, objective_id: objective.id, start: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second)), end: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second + objective.duration)) })\n                                        })\n                                    })\n                                })\n                            })\n                        })\n                    })\n                })\n\n                dispatch({ type: \"GET_TIMERS\", timers: timers })\n            })\n    };\n}\n\n\n\n// black magic below\nexport const generateTimers = (dispatch, getState) => {\n    const state = getState()\n    const objectives = state.objectiveState.objectives\n    const timers = []\n\n    objectives.forEach(objective => {\n        const years = objective.years\n        const months = objective.months\n        const days = objective.days\n        const hours = objective.hours\n        const minutes = objective.minutes\n        const seconds = objective.seconds\n        years.replace(\" \", \"\").split(\",\").forEach(year => {\n            months.replace(\" \", \"\").split(\",\").forEach(month => {\n                days.replace(\" \", \"\").split(\",\").forEach(day => {\n                    hours.replace(\" \", \"\").split(\",\").forEach(hour => {\n                        minutes.replace(\" \", \"\").split(\",\").forEach(minute => {\n                            seconds.replace(\" \", \"\").split(\",\").forEach(second => {\n                                timers.push({ name: objective.name, description: objective.description, duration: objective.duration, objective_id: objective.id, start: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second)), end: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second + objective.duration)) })\n                            })\n                        })\n                    })\n                })\n            })\n        })\n    })\n\n    console.log(timers)\n\n    dispatch({ type: \"GET_TIMERS\", timers: timers })\n}\n// black magic above"]},"metadata":{},"sourceType":"module"}