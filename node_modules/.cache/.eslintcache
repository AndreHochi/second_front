[{"/home/learn/flatiron/week10/every_second/every_second_frontend/src/index.js":"1","/home/learn/flatiron/week10/every_second/every_second_frontend/src/App.js":"2","/home/learn/flatiron/week10/every_second/every_second_frontend/src/reportWebVitals.js":"3","/home/learn/flatiron/week10/every_second/every_second_frontend/src/store.js":"4","/home/learn/flatiron/week10/every_second/every_second_frontend/src/reducers/loginReducer.js":"5","/home/learn/flatiron/week10/every_second/every_second_frontend/src/routes.js":"6","/home/learn/flatiron/week10/every_second/every_second_frontend/src/pages/Front.js":"7","/home/learn/flatiron/week10/every_second/every_second_frontend/src/actions/loginAction.js":"8","/home/learn/flatiron/week10/every_second/every_second_frontend/src/pages/Main.js":"9","/home/learn/flatiron/week10/every_second/every_second_frontend/src/actions/clockAction.js":"10","/home/learn/flatiron/week10/every_second/every_second_frontend/src/reducers/clockReducer.js":"11","/home/learn/flatiron/week10/every_second/every_second_frontend/src/actions/objectiveAction.js":"12","/home/learn/flatiron/week10/second/second_frontend/src/index.js":"13","/home/learn/flatiron/week10/second/second_frontend/src/store.js":"14","/home/learn/flatiron/week10/second/second_frontend/src/App.js":"15","/home/learn/flatiron/week10/second/second_frontend/src/routes.js":"16","/home/learn/flatiron/week10/second/second_frontend/src/reducers/loginReducer.js":"17","/home/learn/flatiron/week10/second/second_frontend/src/reducers/clockReducer.js":"18","/home/learn/flatiron/week10/second/second_frontend/src/actions/clockAction.js":"19","/home/learn/flatiron/week10/second/second_frontend/src/pages/Front.js":"20","/home/learn/flatiron/week10/second/second_frontend/src/pages/Main.js":"21","/home/learn/flatiron/week10/second/second_frontend/src/actions/loginAction.js":"22","/home/learn/flatiron/week10/second/second_frontend/src/actions/objectiveAction.js":"23","/home/learn/flatiron/week10/second/second_frontend/src/reducers/objectiveReducer.js":"24","/home/learn/flatiron/week10/second/second_frontend/src/actions/signoutAction.js":"25","/home/learn/flatiron/week10/second/second_frontend/src/containers/CardContainer.js":"26","/home/learn/flatiron/week10/second/second_frontend/src/components/Card.js":"27","/home/learn/flatiron/week10/second/second_frontend/src/pages/EditUser.js":"28","/home/learn/flatiron/week10/second/second_frontend/src/pages/EditObj.js":"29","/home/learn/flatiron/week10/second/second_frontend/src/pages/Create.js":"30","/home/learn/flatiron/week10/second/second_frontend/src/pages/DeleteObj.js":"31","/home/learn/flatiron/week10/second/second_frontend/src/actions/deleteUserAction.js":"32"},{"size":526,"mtime":1621808985548,"results":"33","hashOfConfig":"34"},{"size":484,"mtime":1622005007297,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1621363269128,"results":"36","hashOfConfig":"34"},{"size":534,"mtime":1621915928396,"results":"37","hashOfConfig":"34"},{"size":850,"mtime":1622039366080,"results":"38","hashOfConfig":"34"},{"size":510,"mtime":1622002721514,"results":"39","hashOfConfig":"34"},{"size":1176,"mtime":1622044922365,"results":"40","hashOfConfig":"34"},{"size":1789,"mtime":1622011746990,"results":"41","hashOfConfig":"34"},{"size":1502,"mtime":1622011775430,"results":"42","hashOfConfig":"34"},{"size":389,"mtime":1621976238972,"results":"43","hashOfConfig":"34"},{"size":340,"mtime":1622012770543,"results":"44","hashOfConfig":"34"},{"size":927,"mtime":1622039576609,"results":"45","hashOfConfig":"34"},{"size":526,"mtime":1622531337843,"results":"46","hashOfConfig":"47"},{"size":592,"mtime":1622531346399,"results":"48","hashOfConfig":"47"},{"size":482,"mtime":1622531349475,"results":"49","hashOfConfig":"47"},{"size":1084,"mtime":1622537183324,"results":"50","hashOfConfig":"47"},{"size":847,"mtime":1622531311631,"results":"51","hashOfConfig":"47"},{"size":342,"mtime":1622531302659,"results":"52","hashOfConfig":"47"},{"size":402,"mtime":1622531220450,"results":"53","hashOfConfig":"47"},{"size":1100,"mtime":1622531287883,"results":"54","hashOfConfig":"47"},{"size":1776,"mtime":1622573909069,"results":"55","hashOfConfig":"47"},{"size":2824,"mtime":1622531234678,"results":"56","hashOfConfig":"47"},{"size":13904,"mtime":1622750961497,"results":"57","hashOfConfig":"47"},{"size":2212,"mtime":1622749663234,"results":"58","hashOfConfig":"47"},{"size":227,"mtime":1622531252842,"results":"59","hashOfConfig":"47"},{"size":863,"mtime":1622572535450,"results":"60","hashOfConfig":"47"},{"size":1702,"mtime":1622751257568,"results":"61","hashOfConfig":"47"},{"size":891,"mtime":1622537318837,"results":"62","hashOfConfig":"47"},{"size":4757,"mtime":1622657743040,"results":"63","hashOfConfig":"47"},{"size":2489,"mtime":1622656962917,"results":"64","hashOfConfig":"47"},{"size":1082,"mtime":1622657741836,"results":"65","hashOfConfig":"47"},{"size":544,"mtime":1622573424513,"results":"66","hashOfConfig":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"pj5n4y",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"gq43rm",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"97"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"/home/learn/flatiron/week10/every_second/every_second_frontend/src/index.js",[],["138","139"],"/home/learn/flatiron/week10/every_second/every_second_frontend/src/App.js",["140"],"import './App.css';\nimport Routes from \"./routes\"\nimport React, { useEffect } from 'react';\nimport { startTimer } from './actions/clockAction'\nimport { useDispatch } from 'react-redux'\n\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {startTimer(dispatch)}, [])\n  //might need useHistory placed here and passed to Routes\n  return (\n    <div className=\"App\">\n      <div className=\"App-base\">\n        <Routes />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/learn/flatiron/week10/every_second/every_second_frontend/src/reportWebVitals.js",[],["141","142"],"/home/learn/flatiron/week10/every_second/every_second_frontend/src/store.js",[],"/home/learn/flatiron/week10/every_second/every_second_frontend/src/reducers/loginReducer.js",[],"/home/learn/flatiron/week10/every_second/every_second_frontend/src/routes.js",[],"/home/learn/flatiron/week10/every_second/every_second_frontend/src/pages/Front.js",[],"/home/learn/flatiron/week10/every_second/every_second_frontend/src/actions/loginAction.js",[],"/home/learn/flatiron/week10/every_second/every_second_frontend/src/pages/Main.js",["143","144","145"],"import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchObjectives } from '../actions/objectiveAction'\n\n\nconst Front = () => {\n\n    const states = useSelector(reducer => reducer.clockState)\n    const dispatch = useDispatch()\n\n    let dayToMili = 86400000\n    let hourToMili = 3600000\n    let minuteToMili = 60000\n    let secondToMili = 1000\n\n    let remainingtime_s = Math.abs(states.time - new Date(2021, 4, 26, 0, 0, 0))\n    let days = Math.floor(remainingtime_s / dayToMili)\n    let remainingtime = remainingtime_s % dayToMili\n    let hours = Math.floor(remainingtime / hourToMili)\n    remainingtime = remainingtime % hourToMili\n    let minutes = Math.floor(remainingtime / minuteToMili)\n    remainingtime = remainingtime % minuteToMili\n    let seconds = Math.floor(remainingtime / secondToMili)\n\n\n    // useEffect(() => {\n    //     fetchObjectives(dispatch)\n    // })\n\n    return (\n        <div className='App-front'>\n            {/* <p>{new Date(states.time - new Date(2021, 5, 25, 2, 0, 0)).toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'})}</p> */}\n            <p>{days} : {hours} : {minutes} : {seconds}</p>\n\n            <p>{states.time.toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' })}</p>\n        </div>\n    )\n}\n\nexport default Front","/home/learn/flatiron/week10/every_second/every_second_frontend/src/actions/clockAction.js",[],"/home/learn/flatiron/week10/every_second/every_second_frontend/src/reducers/clockReducer.js",[],"/home/learn/flatiron/week10/every_second/every_second_frontend/src/actions/objectiveAction.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/index.js",[],["146","147"],"/home/learn/flatiron/week10/second/second_frontend/src/store.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/App.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/routes.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/reducers/loginReducer.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/reducers/clockReducer.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/actions/clockAction.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/pages/Front.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/pages/Main.js",["148"],"import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { signoutAction } from '../actions/signoutAction'\nimport { deleteUserAction } from '../actions/deleteUserAction'\nimport { CardContainer } from '../containers/CardContainer'\nimport { fetchObjectives, fetchLinks } from '../actions/objectiveAction'\nimport store from '../store'\n\nconst Main = (props) => {\n\n    const cStates = useSelector(reducer => reducer.clockState)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (localStorage.token) {\n            fetchObjectives(dispatch, store)\n            fetchLinks(dispatch)\n        }\n    }, [])\n\n    return (\n        <div className='App-front'>\n            {/* move buttons to a header object  */}\n            <button onClick={() => signoutAction(dispatch, props.history)}>Sign Out</button>\n            <button onClick={() => deleteUserAction(dispatch, props.history)}>Delete User</button>\n\n            <button onClick={() => props.history.push(\"/editUser\")}>Edit User</button>\n\n            {/* REDO CARD CONTAINER AFTER DOING TIMER OBJECTS */}\n            <CardContainer />\n            {/* FINISH SOUND GETTING SOUND TO PLAY BELOW */}\n            {/* {playSound ? this.} */}\n            <p>{cStates.time.toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' })}</p>\n            <button onClick={(e) => props.history.push(\"/createObjective\")}>Create Objectives</button>\n            <button onClick={(e) => props.history.push(\"/deleteObjective\")}>Delete Objectives</button>\n            <button onClick={(e) => props.history.push(\"/editObjective\")}>Edit Objectives</button>\n\n        </div>\n    )\n}\n\nexport default Main","/home/learn/flatiron/week10/second/second_frontend/src/actions/loginAction.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/actions/objectiveAction.js",["149","150","151","152","153","154","155"],"export const fetchObjectives = (dispatch, store) => {\n\n    let reqPackage = {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        },\n    };\n\n    fetch(\"http://localhost:3000/api/v1/getobjectives\", reqPackage)\n        .then((res) => res.json())\n        .then((data) => { dispatch({ type: \"GET_OBJECTIVES\", objectives: data.objectives }) })\n        .then(() => generateTimers(dispatch, store.getState))\n}\n\nexport const deleteObjAction = (e, dispatch, history, store) => {\n\n    e.preventDefault()\n    const state = store.getState()\n\n    let send = {\n        id: state.objectiveState.currentObj\n    }\n\n    let newLinks = state.objectiveState.links.filter(link => link.before_id === state.objectiveState.currentObj || link.after_id === state.objectiveState.currentObj)\n\n    let reqPackage = {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(send)\n    }\n\n    fetch(\"http://localhost:3000/api/v1/deleteObj\", reqPackage)\n        .then(() => dispatch({ type: \"DELETEOBJ\", objective: state.objectiveState.objectives.find(objective => objective.id == state.objectiveState.currentObj) }))\n        .then(() => {\n            const objectives = state.objectiveState.objectives\n            const timers = []\n            objectives.forEach(objective => {\n                const years = objective.years\n                const months = objective.months\n                const days = objective.days\n                const hours = objective.hours\n                const minutes = objective.minutes\n                const seconds = objective.seconds\n                years.replace(\" \", \"\").split(\",\").forEach(year => {\n                    months.replace(\" \", \"\").split(\",\").forEach(month => {\n                        days.replace(\" \", \"\").split(\",\").forEach(day => {\n                            hours.replace(\" \", \"\").split(\",\").forEach(hour => {\n                                minutes.replace(\" \", \"\").split(\",\").forEach(minute => {\n                                    seconds.replace(\" \", \"\").split(\",\").forEach(second => {\n                                        timers.push({ name: objective.name, description: objective.description, duration: objective.duration, objective_id: objective.id, start: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second)), end: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second) + parseInt(objective.duration)) })\n                                    })\n                                })\n                            })\n                        })\n                    })\n                })\n            })\n\n            dispatch({ type: \"GET_TIMERS\", timers: timers })\n\n        })\n        \n        .then(() => {history.push(\"/main\")\n        dispatch({ type: \"NEWCURRENTLINKS\", link:newLinks})\n        dispatch({ type: \"RESETCURROBJ\" })})\n\n}\n\nexport const fetchLinks = (dispatch) => {\n\n    let reqPackage = {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        },\n    };\n\n    fetch(\"http://localhost:3000/api/v1/getlinks\", reqPackage)\n        .then((res) => res.json())\n        .then((data) => {\n            dispatch({ type: \"GET_LINKS\", links: data.links })\n            const befores = data.links.map(link => link.before_id)\n            const afters = data.links.map(link => link.after_id)\n            const send = afters.find(after => befores.includes(after))\n\n        })\n}\n\nexport const createObjAction = (e, dispatch, history, store) => {\n    e.preventDefault()\n    const state = store.getState()\n\n    //for None first\n    if (e.target[0].value === \"\") {\n\n        let newObj = {\n            name: e.target[1].value,\n            description: e.target[2].value,\n            duration: e.target[3].value,\n            years: e.target[4].value,\n            months: e.target[5].value,\n            days: e.target[6].value,\n            hours: e.target[7].value,\n            minutes: e.target[8].value,\n            seconds: e.target[9].value\n        }\n\n        let reqPackage = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(newObj)\n        }\n\n        fetch(\"http://localhost:3000/api/v1/newObjNoLink\", reqPackage)\n            .then((res) => res.json())\n            .then((data) => { dispatch({ type: \"NEWOBJS\", objective: data.objective }) })\n            .then(() => history.push(\"/main\"))\n\n    } else {\n\n        let linkedObjective = state.objectiveState.objectives.find(objective => objective.id == e.target[0].value)\n\n        let newSeconds = linkedObjective.seconds.replace(\" \", \"\").split(\",\").map(second => String(parseInt(second) + parseInt(linkedObjective.duration) + parseInt(e.target[4].value))).reduce((accumulator, currentValue) => accumulator + \",\" + currentValue)\n\n        let newObj = {\n            linkedObjectiveid: e.target[0].value,\n            name: e.target[1].value,\n            description: e.target[2].value,\n            duration: e.target[3].value,\n            delay: e.target[4].value,\n            years: linkedObjective.years,\n            months: linkedObjective.months,\n            days: linkedObjective.days,\n            hours: linkedObjective.hours,\n            minutes: linkedObjective.minutes,\n            seconds: newSeconds\n        }\n\n        let reqPackage = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(newObj)\n        }\n\n        fetch(\"http://localhost:3000/api/v1/newObjLink\", reqPackage)\n            .then((res) => res.json())\n            .then((data) => { dispatch({ type: \"NEWOBJS\", objective: data.objective }); dispatch({ type: \"NEWLINKS\", link: data.link }) })\n            //stolen from the black magic below\n            .then(() => {\n                const objectives = state.objectiveState.objectives\n                const timers = []\n\n                objectives.forEach(objective => {\n                    const years = objective.years\n                    const months = objective.months\n                    const days = objective.days\n                    const hours = objective.hours\n                    const minutes = objective.minutes\n                    const seconds = objective.seconds\n                    years.replace(\" \", \"\").split(\",\").forEach(year => {\n                        months.replace(\" \", \"\").split(\",\").forEach(month => {\n                            days.replace(\" \", \"\").split(\",\").forEach(day => {\n                                hours.replace(\" \", \"\").split(\",\").forEach(hour => {\n                                    minutes.replace(\" \", \"\").split(\",\").forEach(minute => {\n                                        seconds.replace(\" \", \"\").split(\",\").forEach(second => {\n                                            {debugger}\n                                            timers.push({ name: objective.name, description: objective.description, duration: objective.duration, objective_id: objective.id, start: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second)), end: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second) + parseInt(objective.duration)) })\n                                        })\n                                    })\n                                })\n                            })\n                        })\n                    })\n                })\n\n                dispatch({ type: \"GET_TIMERS\", timers: timers })\n            })\n            .then(() => history.push(\"/main\"))\n    };\n}\n\nexport const editObjAction = (e, dispatch, history, store) => {\n    e.preventDefault()\n    const state = store.getState()\n    const objectives = state.objectiveState.objectives\n    const links = state.objectiveState.links\n    const befores = links.map(link => String(link.before_id))\n    const afters = links.map(link => String(link.after_id))\n    const user_id = objectives[0].user_id\n\n    const newStartingObj = {\n        id: parseInt(e.target[0].value),\n        user_id: user_id,\n        name: e.target[1].value,\n        description: e.target[2].value,\n        duration: e.target[3].value,\n        years: e.target[4].value,\n        months: e.target[5].value,\n        days: e.target[6].value,\n        hours: e.target[7].value,\n        minutes: e.target[8].value,\n        seconds: e.target[9].value,\n    }\n\n    let sendObjs = [newStartingObj]\n    let initObj = newStartingObj\n\n\n\n    while (befores.includes(String(initObj.id))) {\n        let link = links.filter(link => String(link.before_id) === String(initObj.id))[0]\n        let afterObj = objectives.filter(objective => String(objective.id) === String(link.after_id))[0]\n        let newSeconds = initObj.seconds.replace(\" \", \"\").split(\",\").map(second => String(parseInt(second) + parseInt(initObj.duration) + parseInt(link.delay))).reduce((accumulator, currentValue) => accumulator + \",\" + currentValue)\n\n        initObj = {\n            id: afterObj.id,\n            name: afterObj.name,\n            user_id: user_id,\n\n            description: afterObj.description,\n            duration: afterObj.duration,\n            years: e.target[4].value,\n            months: e.target[5].value,\n            days: e.target[6].value,\n            hours: e.target[7].value,\n            minutes: e.target[8].value,\n            seconds: newSeconds\n        }\n\n        sendObjs = sendObjs.concat(initObj)\n    }\n\n    console.log(sendObjs)\n\n    let reqPackage = {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({data: sendObjs})\n    }\n\n    const changingIds = sendObjs.map(objective => objective.id)\n\n    const filtered_objectives = objectives.filter(objective => !changingIds.includes(objective.id) )\n\n    const newState = filtered_objectives.concat(sendObjs)\n\n    dispatch({type: \"EDITOBJS\", objectives: newState})\n\n    fetch(\"http://localhost:3000/api/v1/editObj\", reqPackage)\n\n    const timers = []\n\n    objectives.forEach(objective => {\n        const years = objective.years\n        const months = objective.months\n        const days = objective.days\n        const hours = objective.hours\n        const minutes = objective.minutes\n        const seconds = objective.seconds\n        years.replace(\" \", \"\").split(\",\").forEach(year => {\n            months.replace(\" \", \"\").split(\",\").forEach(month => {\n                days.replace(\" \", \"\").split(\",\").forEach(day => {\n                    hours.replace(\" \", \"\").split(\",\").forEach(hour => {\n                        minutes.replace(\" \", \"\").split(\",\").forEach(minute => {\n                            seconds.replace(\" \", \"\").split(\",\").forEach(second => {\n                                timers.push({ name: objective.name, description: objective.description, duration: objective.duration, objective_id: objective.id, start: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second)), end: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second) + parseInt(objective.duration)) })\n                            })\n                        })\n                    })\n                })\n            })\n        })\n    })\n\n    dispatch({ type: \"GET_TIMERS\", timers: timers })\n    history.push(\"/main\")\n\n}\n\n// black magic below\nexport const generateTimers = (dispatch, getState) => {\n    const state = getState()\n    const objectives = state.objectiveState.objectives\n    const timers = []\n\n    objectives.forEach(objective => {\n        const years = objective.years\n        const months = objective.months\n        const days = objective.days\n        const hours = objective.hours\n        const minutes = objective.minutes\n        const seconds = objective.seconds\n        years.replace(\" \", \"\").split(\",\").forEach(year => {\n            months.replace(\" \", \"\").split(\",\").forEach(month => {\n                days.replace(\" \", \"\").split(\",\").forEach(day => {\n                    hours.replace(\" \", \"\").split(\",\").forEach(hour => {\n                        minutes.replace(\" \", \"\").split(\",\").forEach(minute => {\n                            seconds.replace(\" \", \"\").split(\",\").forEach(second => {\n                                console.log(second + objective.duration)\n                                timers.push({ name: objective.name, description: objective.description, duration: objective.duration, objective_id: objective.id, start: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second)), end: new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute), parseInt(second) + parseInt(objective.duration)) })\n                            })\n                        })\n                    })\n                })\n            })\n        })\n    })\n\n    console.log(timers)\n\n    dispatch({ type: \"GET_TIMERS\", timers: timers })\n}\n// black magic above\n\n\n","/home/learn/flatiron/week10/second/second_frontend/src/reducers/objectiveReducer.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/actions/signoutAction.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/containers/CardContainer.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/components/Card.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/pages/EditUser.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/pages/EditObj.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/pages/Create.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/pages/DeleteObj.js",[],"/home/learn/flatiron/week10/second/second_frontend/src/actions/deleteUserAction.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":11,"column":43,"nodeType":"162","endLine":11,"endColumn":45,"suggestions":"163"},{"ruleId":"156","replacedBy":"164"},{"ruleId":"158","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"170","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":25},{"ruleId":"166","severity":1,"message":"171","line":9,"column":11,"nodeType":"168","messageId":"169","endLine":9,"endColumn":19},{"ruleId":"156","replacedBy":"172"},{"ruleId":"158","replacedBy":"173"},{"ruleId":"160","severity":1,"message":"161","line":19,"column":8,"nodeType":"162","endLine":19,"endColumn":10,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":40,"column":125,"nodeType":"177","messageId":"178","endLine":40,"endColumn":127},{"ruleId":"166","severity":1,"message":"179","line":93,"column":19,"nodeType":"168","messageId":"169","endLine":93,"endColumn":23},{"ruleId":"175","severity":1,"message":"176","line":134,"column":94,"nodeType":"177","messageId":"178","endLine":134,"endColumn":96},{"ruleId":"180","severity":1,"message":"181","line":183,"column":45,"nodeType":"182","messageId":"183","endLine":183,"endColumn":55},{"ruleId":"166","severity":1,"message":"184","line":205,"column":11,"nodeType":"168","messageId":"169","endLine":205,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":228,"column":33,"nodeType":"187","messageId":"188","endLine":228,"endColumn":86},{"ruleId":"185","severity":1,"message":"186","line":230,"column":74,"nodeType":"187","messageId":"188","endLine":230,"endColumn":160},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["191"],["189"],["190"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'fetchObjectives' is defined but never used.","'dispatch' is assigned a value but never used.",["189"],["190"],["192"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'send' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'afters' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'initObj'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"193","fix":"195"},"Update the dependencies array to be: [dispatch]",{"range":"196","text":"197"},{"range":"198","text":"197"},[280,282],"[dispatch]",[656,658]]